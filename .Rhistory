#math534 cp1
r = 1
n1 = 1
n2 = 100000
p = matrix(0,n2-n1+1,1)
timestamp()
##------ Sat Jan 25 20:01:36 2020 ------##
for (N in n1:n2) {
x = runif(N,-r,r)
y = runif(N,-r,r)
p[N-n1+1] = sum((x^2+y^2)<1)/N
}
timestamp()
##------ Sat Jan 25 20:08:27 2020 ------##
epi = p*4
plot(epi-pi, pch =16, cex = .1, ylim = c(-.5,.5), main = 'Residual of estimated Pi value',
xlab = "Sample size", ylab = "Residual")
abline(h=0)
mean(epi[50000:100000])
r = 1
N = 100000
x = runif(N,-r,r)
y = runif(N,-r,r)
p = sum((x^2+y^2)<1)/N
N = 10^10
x = runif(N,-r,r)
N = 10^8
x = runif(N,-r,r)
y = runif(N,-r,r)
p = sum((x^2+y^2)<1)/N
N = 10^7
x = runif(N,-r,r)
y = runif(N,-r,r)
p = sum((x^2+y^2)<1)/N
epi = p*4
#math534 cp1
library(lavaan)
MSE(epi,pi)
#math534 cp1
library(MLmetrics)
MSE(epi,pi)
epi
abs(epi-pi)/pi
percent(abs(epi-pi)/pi)
epi = p*4
abs(epi-pi)/pi
#math534 cp1
r = 1
N = 10^7
x = runif(N,-r,r)
y = runif(N,-r,r)
p = sum((x^2+y^2)<1)/N
epi = p*4
epi
abs(epi-pi)/pi
r = 1
N = 10^7
x = runif(N,-r,r)
y = runif(N,-r,r)
p = sum((x^2+y^2)<1)/N
epi = p*4
epi
abs(epi-pi)/pi
r = 1
N = 10^7
x = runif(N,-r,r)
y = runif(N,-r,r)
p = sum((x^2+y^2)<1)/N
epi = p*4
epi
abs(epi-pi)/pi
r = 1
N = 10^7
x = runif(N,-r,r)
y = runif(N,-r,r)
p = sum((x^2+y^2)<1)/N
epi = p*4
epi
abs(epi-pi)/pi
r = 1
N = 10^7
x = runif(N,-r,r)
y = runif(N,-r,r)
p = sum((x^2+y^2)<1)/N
epi = p*4
epi
abs(epi-pi)/pi
r = 1
N = 10^7
x = runif(N,-r,r)
y = runif(N,-r,r)
p = sum((x^2+y^2)<1)/N
epi = p*4
epi
abs(epi-pi)/pi
r = 1
N = 10^7
x = runif(N,-r,r)
y = runif(N,-r,r)
p = sum((x^2+y^2)<1)/N
epi = p*4
epi
abs(epi-pi)/pi
#math534 cp1
r = 1
N = 10^8
x = runif(N,-r,r)
y = runif(N,-r,r)
p = sum((x^2+y^2)<1)/N
epi = p*4
epi
abs(epi-pi)/pi
library(rgl)
lehmer_rng = function(n,m,a,b,x0){
r = NULL
for (i in 1:n){
r = c(r, x0)
x0 = ((a*x0+b) %% m )
}
return(r)
}
m = 2^31
x0 = 1
a = 2^16+3
b = 0
n = 5000
res_randu = lehmer_rng(n,m,a,b,x0)/m
hist(res_randu, main = 'Histogram of obtained series', xlab = 'Value of R_k')
cc = matrix(0,length(res_randu)-1,2)
cc = matrix(0,length(res_randu)-2,3)
for (i in 1:(length(res_randu)-2)){
cc[i,1] = res_randu[i]
cc[i,2] = res_randu[i+1]
cc[i,3] = res_randu[i+2]
}
plot3d(cc[,1:3], main = '3D scatter plot of R_(k-1), R_k, R_(k+1) from RANDU RNG',
xlab = 'R_(k-1)',
ylab = 'R_k',
zlab = 'R_(k+1)')
